(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
const contact = {
  contactBuilder(contactObject) {
    let newContact = document.createElement("div");
    newContact.classList.add("contact");
    let newContactName = document.createElement("h3");
    newContactName.textContent = `Name: ${contactObject.name}`;
    let newContactPhone = document.createElement("p");
    newContactPhone.textContent = `Phone: ${contactObject.phone}`;
    let newContactAddress = document.createElement("p");
    newContactAddress.textContent = `Address: ${contactObject.address}`;
    newContact.appendChild(newContactName);
    newContact.appendChild(newContactPhone);
    newContact.appendChild(newContactAddress);
    return newContact;
  }

};
var _default = contact;
exports.default = _default;

},{}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _contact = _interopRequireDefault(require("./contact"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const contactCollection = {
  getAllContacts() {
    return fetch("http://localhost:8088/contacts").then(response => response.json());
  },

  postContactObject(contactObject) {
    fetch("http://localhost:8088/contacts", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify(contactObject)
    });
  }

};
var _default = contactCollection;
exports.default = _default;

},{"./contact":1}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _eventListeners = _interopRequireDefault(require("./eventListeners"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const contactInputForm = {
  contactFormBuilder() {
    let contactForm = document.querySelector(".contactForm");
    contactForm.addEventListener("click", function (event) {
      event.preventDefault();
    });
    let contactField = document.createElement("fieldset");
    let contactInput = document.createElement("input");
    contactInput.setAttribute("id", "contact_name");
    contactInput.setAttribute("address", "text");
    let contactLabel = document.createElement("label");
    contactLabel.setAttribute("for", "contact_name");
    contactLabel.textContent = "Name: ";
    contactField.appendChild(contactLabel);
    contactField.appendChild(contactInput);
    contactForm.appendChild(contactField);
    let phoneField = document.createElement("fieldset");
    let phoneInput = document.createElement("input");
    phoneInput.setAttribute("id", "contact_phone");
    phoneInput.setAttribute("type", "text");
    let phoneLabel = document.createElement("label");
    phoneLabel.setAttribute("for", "contact_phone");
    phoneLabel.textContent = "Phone: ";
    phoneField.appendChild(phoneLabel);
    phoneField.appendChild(phoneInput);
    contactForm.appendChild(phoneField);
    let addressField = document.createElement("fieldset");
    let addressInput = document.createElement("input");
    addressInput.setAttribute("id", "contact_address");
    addressInput.setAttribute("type", "text");
    let addressLabel = document.createElement("label");
    addressLabel.setAttribute("for", "contact_address");
    addressLabel.textContent = "Address: ";
    addressField.appendChild(addressLabel);
    addressField.appendChild(addressInput);
    contactForm.appendChild(addressField);
    let saveButton = document.createElement("button");
    saveButton.setAttribute("id", "saveBtn");
    saveButton.textContent = "Save";
    saveButton.addEventListener("click", _eventListeners.default.handleSaveButton);
    contactForm.appendChild(saveButton);
  }

};
var _default = contactInputForm;
exports.default = _default;

},{"./eventListeners":5}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _contactCollection = _interopRequireDefault(require("./contactCollection"));

var _contact = _interopRequireDefault(require("./contact"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const contactList = {
  createContactList() {
    _contactCollection.default.getAllContacts().then(allContacts => {
      let contactDocFagment = document.createDocumentFragment();
      allContacts.forEach(contactItem => {
        let contactHTML = _contact.default.contactBuilder(contactItem);

        contactDocFagment.appendChild(contactHTML);
      });
      let contactContainer = document.getElementById("contact_container");
      contactContainer.appendChild(contactDocFagment);
    });
  }

};
var _default = contactList;
exports.default = _default;

},{"./contact":1,"./contactCollection":2}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _contactCollection = _interopRequireDefault(require("./contactCollection"));

var _contactList = _interopRequireDefault(require("./contactList"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const eventListeners = {
  handleSaveButton() {
    let contactName = document.getElementById("contact_name").value;
    let contactPhone = document.getElementById("contact_phone").value;
    let contactAddress = document.getElementById("contact_address").value;
    let contactObject = {
      "name": `${contactName}`,
      "phone": `${contactPhone}`,
      "address": `${contactAddress}`
    };

    _contactCollection.default.postContactObject(contactObject);

    location.reload(true);
  }

};
var _default = eventListeners;
exports.default = _default;

},{"./contactCollection":2,"./contactList":4}],6:[function(require,module,exports){
"use strict";

var _contactList = _interopRequireDefault(require("./contactList"));

var _contactForm = _interopRequireDefault(require("./contactForm"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_contactForm.default.contactFormBuilder();

_contactList.default.createContactList();

},{"./contactForm":3,"./contactList":4}]},{},[6])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
